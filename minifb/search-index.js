var searchIndex = {};
searchIndex["minifb"] = {"doc":"minifb is a cross platform library written in [Rust](https://www.rust-lang.org) that makes to\nopen windows (usually native to the running operating system) and can optionally show a 32-bit\nbuffer. minifb also support keyboard, mouse input and menus on selected operating systems.","items":[[3,"Window","minifb","",null,null],[3,"WindowOptions","","",null,null],[12,"borderless","","If the window should be borderless (default: false)",0,null],[12,"title","","If the window should have a title (default: true)",0,null],[12,"resize","","If it should be possible to resize the window (default: false)",0,null],[12,"scale","","Scale of the window that used in conjunction with update_with_buffer (default: X1)",0,null],[3,"UnixMenu","","",null,null],[12,"name","","Name of the menu",1,null],[12,"items","","All items of the menu.",1,null],[3,"UnixMenuItem","","",null,null],[12,"sub_menu","","Set to a menu if there is a Item is a sub_menu otherwise None",2,null],[12,"handle","","Handle of the MenuItem",2,null],[12,"id","","Id of the item (set by the user from the outside and should be reported back when pressed)",2,null],[12,"label","","Name of the item",2,null],[12,"enabled","","Set to true if enabled otherwise false",2,null],[12,"key","","Shortcut key",2,null],[12,"modifier","","Modifier for the key (Shift, Ctrl, etc)",2,null],[3,"Menu","","",null,null],[3,"MenuItem","","",null,null],[12,"id","","",3,null],[12,"label","","",3,null],[12,"enabled","","",3,null],[12,"key","","",3,null],[12,"modifier","","",3,null],[4,"Scale","","Scale will scale the frame buffer and the window that is being sent in when calling the update\nfunction. This is useful if you for example want to display a 320 x 256 window on a screen with\nmuch higher resolution which would result in that the window is very small.",null,null],[13,"FitScreen","","This mode checks your current screen resolution and will caluclate the largest window size\nthat can be used within that limit and resize it. Useful if you have a small buffer to\ndisplay on a high resolution screen.",4,null],[13,"X1","","1X scale (which means leave the corrdinates sent into Window::new untouched)",4,null],[13,"X2","","2X window scale (Example: 320 x 200 -&gt; 640 x 400)",4,null],[13,"X4","","4X window scale (Example: 320 x 200 -&gt; 1280 x 800)",4,null],[13,"X8","","8X window scale (Example: 320 x 200 -&gt; 2560 x 1600)",4,null],[13,"X16","","16X window scale (Example: 320 x 200 -&gt; 5120 x 3200)",4,null],[13,"X32","","32 window scale (Example: 320 x 200 -&gt; 10240 x 6400)",4,null],[4,"KeyRepeat","","Used for is_key_pressed and get_keys_pressed() to indicated if repeat of presses is wanted",null,null],[13,"Yes","","Use repeat",5,null],[13,"No","","Don&#39;t use repeat",5,null],[4,"MouseButton","","The various mouse buttons that are availible",null,null],[13,"Left","","Left mouse button",6,null],[13,"Middle","","Middle mouse button",6,null],[13,"Right","","Right mouse button",6,null],[4,"MouseMode","","The diffrent modes that can be used to decide how mouse coordinates should be handled",null,null],[13,"Pass","","Return mouse coords from outside of the window (may be negative)",7,null],[13,"Clamp","","Clamp the mouse coordinates within the window",7,null],[13,"Discard","","Discared if the mouse is outside the window",7,null],[4,"CursorStyle","","Different style of cursors that can be used",null,null],[13,"Arrow","","Regular arrow style (this is what the cursor normal looks like)",8,null],[13,"Ibeam","","Used when indicating insertion (like text field)",8,null],[13,"Crosshair","","Cross-hair cursor",8,null],[13,"ClosedHand","","Closed hand which useful for dragging things, may use default hand on unsupported OSes.",8,null],[13,"OpenHand","","Open hand which useful for indicating drangable things, may use default hand on unsupported OSes.",8,null],[13,"ResizeLeftRight","","Rezining left-rigth direction",8,null],[13,"ResizeUpDown","","Rezining up-down direction",8,null],[13,"ResizeAll","","Resize in all directions",8,null],[4,"Error","","Errors that can be return from various operatiors",null,null],[13,"MenusNotSupported","","Returned if menu Menu function isn&#39;t supported",9,null],[13,"MenuExists","","Menu already exists",9,null],[13,"WindowCreate","","Menu already exists",9,null],[11,"fmt","","",9,null],[11,"description","","",9,null],[11,"cause","","",9,null],[11,"fmt","","",9,null],[17,"MENU_KEY_COMMAND","","Command key on Mac OS",null,null],[17,"MENU_KEY_WIN","","Windows key on Windows",null,null],[17,"MENU_KEY_SHIFT","","Shift key",null,null],[17,"MENU_KEY_CTRL","","Control key",null,null],[17,"MENU_KEY_ALT","","Alt key",null,null],[8,"InputCallback","","This trait can be implemented and set with ```set_input_callback``` to reieve a callback\nwhene there is inputs incoming. Currently only support unicode chars.",null,null],[10,"add_char","","",10,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"new","","",11,{"inputs":[{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"windowoptions"}],"output":{"name":"result"}}],[11,"set_title","","",11,null],[11,"get_window_handle","","",11,null],[11,"update_with_buffer","","",11,null],[11,"update","","",11,null],[11,"is_open","","",11,null],[11,"set_position","","",11,null],[11,"get_size","","",11,null],[11,"get_mouse_pos","","",11,null],[11,"get_mouse_down","","",11,null],[11,"get_scroll_wheel","","",11,null],[11,"set_cursor_style","","",11,null],[11,"get_keys","","",11,null],[11,"get_keys_pressed","","",11,null],[11,"is_key_down","","",11,null],[11,"is_key_pressed","","",11,null],[11,"set_key_repeat_delay","","",11,null],[11,"set_key_repeat_rate","","",11,null],[11,"is_active","","",11,null],[11,"set_input_callback","","",11,null],[11,"add_menu","","",11,null],[11,"remove_menu","","",11,null],[11,"get_unix_menus","","",11,null],[11,"is_menu_pressed","","",11,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"new","","Create a new menu. Returns error if failed",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"destroy_menu","","Destroys a menu. Currently not implemented",12,null],[11,"add_sub_menu","","Adds a sub menu to the current menu",12,null],[11,"add_separator","","Adds a menu separator",12,null],[11,"add_menu_item","","Adds an item to the menu",12,null],[11,"add_item","","Adds an item to the menu. Notice that you need to call &quot;build&quot; to finish the add\n# Examples",12,null],[11,"remove_item","","Removes an item from the menu",12,null],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",3,null],[11,"new","","Creates a new menu item",3,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"menuitem"}}],[11,"shortcut","","Sets a shortcut key and modifer (and returns itself)",3,null],[11,"separator","","Sets item to a separator",3,null],[11,"enabled","","Sets the menu item disabled/or not",3,null],[11,"build","","Must be called to finialize building of a menu item when started with ```menu.add_item()```",3,null]],"paths":[[3,"WindowOptions"],[3,"UnixMenu"],[3,"UnixMenuItem"],[3,"MenuItem"],[4,"Scale"],[4,"KeyRepeat"],[4,"MouseButton"],[4,"MouseMode"],[4,"CursorStyle"],[4,"Error"],[8,"InputCallback"],[3,"Window"],[3,"Menu"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",5,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",5,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",5,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"clone","","",6,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"add","","",6,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",11,null],[12,"sa_family","","",11,null],[12,"sa_data","","",11,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",12,null],[12,"sin6_family","","",12,null],[12,"sin6_port","","",12,null],[12,"sin6_flowinfo","","",12,null],[12,"sin6_addr","","",12,null],[12,"sin6_scope_id","","",12,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",13,null],[12,"sun_family","","",13,null],[12,"sun_path","","",13,null],[3,"passwd","","",null,null],[12,"pw_name","","",14,null],[12,"pw_passwd","","",14,null],[12,"pw_uid","","",14,null],[12,"pw_gid","","",14,null],[12,"pw_change","","",14,null],[12,"pw_class","","",14,null],[12,"pw_gecos","","",14,null],[12,"pw_dir","","",14,null],[12,"pw_shell","","",14,null],[12,"pw_expire","","",14,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",15,null],[12,"ifa_name","","",15,null],[12,"ifa_flags","","",15,null],[12,"ifa_addr","","",15,null],[12,"ifa_netmask","","",15,null],[12,"ifa_dstaddr","","",15,null],[12,"ifa_data","","",15,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",16,null],[12,"tm_min","","",16,null],[12,"tm_hour","","",16,null],[12,"tm_mday","","",16,null],[12,"tm_mon","","",16,null],[12,"tm_year","","",16,null],[12,"tm_wday","","",16,null],[12,"tm_yday","","",16,null],[12,"tm_isdst","","",16,null],[12,"tm_gmtoff","","",16,null],[12,"tm_zone","","",16,null],[3,"utsname","","",null,null],[12,"sysname","","",17,null],[12,"nodename","","",17,null],[12,"release","","",17,null],[12,"version","","",17,null],[12,"machine","","",17,null],[3,"msghdr","","",null,null],[12,"msg_name","","",18,null],[12,"msg_namelen","","",18,null],[12,"msg_iov","","",18,null],[12,"msg_iovlen","","",18,null],[12,"msg_control","","",18,null],[12,"msg_controllen","","",18,null],[12,"msg_flags","","",18,null],[3,"flock","","",null,null],[12,"l_start","","",19,null],[12,"l_len","","",19,null],[12,"l_pid","","",19,null],[12,"l_type","","",19,null],[12,"l_whence","","",19,null],[3,"fsid_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",20,null],[12,"gl_offs","","",20,null],[12,"gl_pathv","","",20,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",21,null],[12,"ss_family","","",21,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",22,null],[12,"ai_family","","",22,null],[12,"ai_socktype","","",22,null],[12,"ai_protocol","","",22,null],[12,"ai_addrlen","","",22,null],[12,"ai_canonname","","",22,null],[12,"ai_addr","","",22,null],[12,"ai_next","","",22,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",23,null],[12,"denom","","",23,null],[3,"stat","","",null,null],[12,"st_dev","","",24,null],[12,"st_mode","","",24,null],[12,"st_nlink","","",24,null],[12,"st_ino","","",24,null],[12,"st_uid","","",24,null],[12,"st_gid","","",24,null],[12,"st_rdev","","",24,null],[12,"st_atime","","",24,null],[12,"st_atime_nsec","","",24,null],[12,"st_mtime","","",24,null],[12,"st_mtime_nsec","","",24,null],[12,"st_ctime","","",24,null],[12,"st_ctime_nsec","","",24,null],[12,"st_birthtime","","",24,null],[12,"st_birthtime_nsec","","",24,null],[12,"st_size","","",24,null],[12,"st_blocks","","",24,null],[12,"st_blksize","","",24,null],[12,"st_flags","","",24,null],[12,"st_gen","","",24,null],[12,"st_lspare","","",24,null],[12,"st_qspare","","",24,null],[3,"dirent","","",null,null],[12,"d_ino","","",25,null],[12,"d_seekoff","","",25,null],[12,"d_reclen","","",25,null],[12,"d_namlen","","",25,null],[12,"d_type","","",25,null],[12,"d_name","","",25,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",26,null],[12,"si_errno","","",26,null],[12,"si_code","","",26,null],[12,"si_pid","","",26,null],[12,"si_uid","","",26,null],[12,"si_status","","",26,null],[12,"si_addr","","",26,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",27,null],[12,"sa_mask","","",27,null],[12,"sa_flags","","",27,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",28,null],[12,"ss_size","","",28,null],[12,"ss_flags","","",28,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",29,null],[12,"fst_posmode","","",29,null],[12,"fst_offset","","",29,null],[12,"fst_length","","",29,null],[12,"fst_bytesalloc","","",29,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",30,null],[12,"ra_count","","",30,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",31,null],[12,"f_frsize","","",31,null],[12,"f_blocks","","",31,null],[12,"f_bfree","","",31,null],[12,"f_bavail","","",31,null],[12,"f_files","","",31,null],[12,"f_ffree","","",31,null],[12,"f_favail","","",31,null],[12,"f_fsid","","",31,null],[12,"f_flag","","",31,null],[12,"f_namemax","","",31,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",32,null],[12,"dli_fbase","","",32,null],[12,"dli_sname","","",32,null],[12,"dli_saddr","","",32,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",33,null],[12,"sin_family","","",33,null],[12,"sin_port","","",33,null],[12,"sin_addr","","",33,null],[12,"sin_zero","","",33,null],[3,"statfs","","",null,null],[12,"f_bsize","","",34,null],[12,"f_iosize","","",34,null],[12,"f_blocks","","",34,null],[12,"f_bfree","","",34,null],[12,"f_bavail","","",34,null],[12,"f_files","","",34,null],[12,"f_ffree","","",34,null],[12,"f_fsid","","",34,null],[12,"f_owner","","",34,null],[12,"f_type","","",34,null],[12,"f_flags","","",34,null],[12,"f_fssubtype","","",34,null],[12,"f_fstypename","","",34,null],[12,"f_mntonname","","",34,null],[12,"f_mntfromname","","",34,null],[12,"f_reserved","","",34,null],[3,"kevent","","",null,null],[12,"ident","","",35,null],[12,"filter","","",35,null],[12,"flags","","",35,null],[12,"fflags","","",35,null],[12,"data","","",35,null],[12,"udata","","",35,null],[3,"kevent64_s","","",null,null],[12,"ident","","",36,null],[12,"filter","","",36,null],[12,"flags","","",36,null],[12,"fflags","","",36,null],[12,"data","","",36,null],[12,"udata","","",36,null],[12,"ext","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curbytes","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_id","","",37,null],[12,"dqb_spare","","",37,null],[3,"termios","","",null,null],[12,"c_iflag","","",38,null],[12,"c_oflag","","",38,null],[12,"c_cflag","","",38,null],[12,"c_lflag","","",38,null],[12,"c_cc","","",38,null],[12,"c_ispeed","","",38,null],[12,"c_ospeed","","",38,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"getnameinfo","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",39,null],[11,"is_none","","Returns `true` if the option is a `None` value",39,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",39,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",39,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",39,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",39,null],[11,"unwrap_or","","Returns the contained value or a default.",39,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",39,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",39,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",39,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",39,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",39,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",39,null],[11,"iter","","Returns an iterator over the possibly contained value.",39,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",39,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",39,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",39,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",39,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",39,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",39,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",39,null],[11,"unwrap_or_default","","Returns the contained value or a default",39,null],[11,"hash","core::num","",40,null],[11,"default","","",40,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",40,null],[11,"cmp","","",40,null],[11,"partial_cmp","","",40,null],[11,"lt","","",40,null],[11,"le","","",40,null],[11,"gt","","",40,null],[11,"ge","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"shl","","",40,null],[11,"shl_assign","","",40,null],[11,"shr","","",40,null],[11,"shr_assign","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"add","","",40,null],[11,"add_assign","","",40,null],[11,"sub","","",40,null],[11,"sub_assign","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"div","","",40,null],[11,"div_assign","","",40,null],[11,"rem","","",40,null],[11,"rem_assign","","",40,null],[11,"not","","",40,null],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,null],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,null],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,null],[11,"neg","","",40,null],[11,"eq","core::num::dec2flt","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"fmt","","",41,null],[11,"fmt","core::num","",42,null],[11,"eq","","",42,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",43,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"fmt","","",44,null],[11,"hash","core::nonzero","",45,null],[11,"fmt","","",45,null],[11,"partial_cmp","","",45,null],[11,"lt","","",45,null],[11,"le","","",45,null],[11,"gt","","",45,null],[11,"ge","","",45,null],[11,"cmp","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"clone","","",45,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",45,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",45,null],[11,"new","core::ptr","Creates a new `Unique`.",46,null],[11,"get","","Dereferences the content.",46,null],[11,"get_mut","","Mutably dereferences the content.",46,null],[11,"deref","","",46,null],[11,"fmt","","",46,null],[11,"new","","Creates a new `Shared`.",47,null],[11,"clone","","",47,null],[11,"deref","","",47,null],[11,"fmt","","",47,null],[11,"hash","core::marker","",48,null],[11,"eq","","",48,null],[11,"partial_cmp","","",48,null],[11,"cmp","","",48,null],[11,"clone","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",49,null],[11,"eq","","",49,null],[11,"clone","","",49,null],[11,"fmt","","",49,null],[11,"hash","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"contains","","# Examples",50,null],[11,"hash","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"contains","","# Examples",51,null],[11,"hash","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"contains","","# Examples",52,null],[11,"hash","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"from","","",53,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",53,null],[11,"hash","","",54,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"contains","","# Examples",54,null],[11,"hash","core::cmp","",55,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"clone","","",55,null],[11,"reverse","","Reverse the `Ordering`.",55,null],[11,"cmp","","",55,null],[11,"partial_cmp","","",55,null],[11,"fmt","libc","",56,null],[11,"fmt","","",56,null],[11,"is","","Returns true if the boxed type is the same as `T`",56,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",56,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",56,null],[11,"is","","Forwards to the method defined on the type `Any`.",56,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",56,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",56,null],[11,"hash","core::any","",57,null],[11,"fmt","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",57,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",58,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"new","","Creates a new `AtomicBool`.",58,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",58,null],[11,"store","","Stores a value into the bool.",58,null],[11,"swap","","Stores a value into the bool, returning the old value.",58,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",58,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",58,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",58,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",58,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",58,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",58,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",58,null],[11,"new","","Creates a new `AtomicPtr`.",59,null],[11,"load","","Loads a value from the pointer.",59,null],[11,"store","","Stores a value into the pointer.",59,null],[11,"swap","","Stores a value into the pointer, returning the old value.",59,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",59,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",59,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",59,null],[11,"default","","",61,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",61,null],[11,"new","","Creates a new atomic integer.",61,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",61,null],[11,"store","","Stores a value into the atomic integer.",61,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",61,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",61,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",61,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",61,null],[11,"fetch_add","","Add to the current value, returning the previous value.",61,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",61,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",61,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",61,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",61,null],[11,"default","","",62,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",62,null],[11,"new","","Creates a new atomic integer.",62,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",62,null],[11,"store","","Stores a value into the atomic integer.",62,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",62,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",62,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",62,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",62,null],[11,"fetch_add","","Add to the current value, returning the previous value.",62,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",62,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",62,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",62,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",62,null],[11,"default","","",63,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",63,null],[11,"new","","Creates a new atomic integer.",63,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",63,null],[11,"store","","Stores a value into the atomic integer.",63,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",63,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",63,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",63,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",63,null],[11,"fetch_add","","Add to the current value, returning the previous value.",63,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",63,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",63,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",63,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",63,null],[11,"default","","",64,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",64,null],[11,"new","","Creates a new atomic integer.",64,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",64,null],[11,"store","","Stores a value into the atomic integer.",64,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",64,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",64,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",64,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",64,null],[11,"fetch_add","","Add to the current value, returning the previous value.",64,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",64,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",64,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",64,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",64,null],[11,"default","","",65,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",65,null],[11,"new","","Creates a new atomic integer.",65,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",65,null],[11,"store","","Stores a value into the atomic integer.",65,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",65,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"fetch_add","","Add to the current value, returning the previous value.",65,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",65,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",65,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",65,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",65,null],[11,"default","","",66,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",66,null],[11,"new","","Creates a new atomic integer.",66,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",66,null],[11,"store","","Stores a value into the atomic integer.",66,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",66,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"fetch_add","","Add to the current value, returning the previous value.",66,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",66,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",66,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",66,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",66,null],[11,"default","","",67,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",67,null],[11,"new","","Creates a new atomic integer.",67,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",67,null],[11,"store","","Stores a value into the atomic integer.",67,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",67,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"fetch_add","","Add to the current value, returning the previous value.",67,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",67,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",67,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",67,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",67,null],[11,"default","","",68,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",68,null],[11,"new","","Creates a new atomic integer.",68,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",68,null],[11,"store","","Stores a value into the atomic integer.",68,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",68,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"fetch_add","","Add to the current value, returning the previous value.",68,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",68,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",68,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",68,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",68,null],[11,"default","","",69,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",69,null],[11,"new","","Creates a new atomic integer.",69,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",69,null],[11,"store","","Stores a value into the atomic integer.",69,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",69,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"fetch_add","","Add to the current value, returning the previous value.",69,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",69,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",69,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",69,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",69,null],[11,"default","","",70,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",70,null],[11,"new","","Creates a new atomic integer.",70,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",70,null],[11,"store","","Stores a value into the atomic integer.",70,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",70,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"fetch_add","","Add to the current value, returning the previous value.",70,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",70,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",70,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",70,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",70,null],[11,"fmt","","",58,null],[11,"fmt","","",59,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",71,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",71,null],[11,"set","","Sets the contained value.",71,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",71,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",71,null],[11,"clone","","",71,null],[11,"default","","",71,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"cmp","","",71,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"clone","","",72,null],[11,"new","","Creates a new `RefCell` containing `value`.",73,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",73,null],[11,"borrow_state","","Query the current state of this `RefCell`",73,null],[11,"borrow","","Immutably borrows the wrapped value.",73,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",73,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",73,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",73,null],[11,"clone","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"cmp","","",73,null],[11,"deref","","",74,null],[11,"clone","","Copies a `Ref`.",74,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",74,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",75,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",75,null],[11,"deref_mut","","",75,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",76,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",76,null],[11,"get","","Gets a mutable pointer to the wrapped value.",76,null],[11,"default","","",76,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",77,null],[11,"clone","","",77,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"count","","",77,null],[11,"last","","",77,null],[11,"len","","",77,null],[11,"fmt","","",78,null],[11,"clone","","",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"count","","",78,null],[11,"nth","","",78,null],[11,"last","","",78,null],[11,"len","","",78,null],[11,"fmt","","",79,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"fmt","core::iter::range","",81,null],[11,"clone","","",81,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",51,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",50,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",53,null],[11,"next","core::iter::range","",81,null],[11,"size_hint","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","core::ops","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"next","","",51,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"fmt","core::iter::sources","",82,null],[11,"clone","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"next_back","","",82,null],[11,"fmt","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next_back","","",83,null],[11,"len","","",83,null],[11,"clone","","",83,null],[11,"default","","",83,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"next_back","","",84,null],[11,"len","","",84,null],[11,"fmt","core::iter","",85,null],[11,"clone","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"next_back","","",85,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"next_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"next","","",88,null],[11,"count","","",88,null],[11,"nth","","",88,null],[11,"find","","",88,null],[11,"last","","",88,null],[11,"size_hint","","",88,null],[11,"next_back","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"next","","",89,null],[11,"size_hint","","",89,null],[11,"next_back","","",89,null],[11,"clone","","",90,null],[11,"fmt","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"clone","","",91,null],[11,"fmt","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"clone","","",92,null],[11,"fmt","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","# Overflow Behavior",93,null],[11,"size_hint","","",93,null],[11,"nth","","",93,null],[11,"count","","",93,null],[11,"next_back","","",93,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"next","","",94,null],[11,"count","","",94,null],[11,"nth","","",94,null],[11,"last","","",94,null],[11,"size_hint","","",94,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",94,null],[11,"is_empty","","Checks if the iterator has finished iterating.",94,null],[11,"clone","","",95,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"clone","","",96,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"nth","","",97,null],[11,"count","","",97,null],[11,"last","","",97,null],[11,"size_hint","","",97,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"clone","","",98,null],[11,"next","","",98,null],[11,"nth","","",98,null],[11,"size_hint","","",98,null],[11,"clone","","",99,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"clone","","",100,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"next","","",101,null],[11,"nth","","",101,null],[11,"last","","",101,null],[11,"count","","",101,null],[11,"size_hint","","",101,null],[11,"next_back","","",101,null],[11,"clone","","",102,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"next_back","","",102,null],[11,"hash","core::option","",39,null],[11,"fmt","","",39,null],[11,"cmp","","",39,null],[11,"partial_cmp","","",39,null],[11,"lt","","",39,null],[11,"le","","",39,null],[11,"gt","","",39,null],[11,"ge","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"clone","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",39,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"clone","","",103,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",39,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",106,null],[11,"hash","core::result","",107,null],[11,"fmt","","",107,null],[11,"cmp","","",107,null],[11,"partial_cmp","","",107,null],[11,"lt","","",107,null],[11,"le","","",107,null],[11,"gt","","",107,null],[11,"ge","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"is_ok","","Returns true if the result is `Ok`",107,null],[11,"is_err","","Returns true if the result is `Err`",107,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",107,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",107,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",107,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",107,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",107,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",107,null],[11,"iter","","Returns an iterator over the possibly contained value.",107,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",107,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",107,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",107,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",107,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",107,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",107,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",107,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",107,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",107,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",107,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",107,null],[11,"fmt","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"fmt","","",110,null],[11,"next","","",110,null],[11,"size_hint","","",110,null],[11,"next_back","","",110,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",107,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",111,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",111,null],[11,"next","","",111,null],[11,"size_hint","","",111,null],[11,"count","","",111,null],[11,"nth","","",111,null],[11,"last","","",111,null],[11,"next_back","","",111,null],[11,"clone","","",111,null],[11,"fmt","","",112,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",112,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"count","","",112,null],[11,"nth","","",112,null],[11,"last","","",112,null],[11,"next_back","","",112,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"fmt","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"fmt","","",115,null],[11,"fmt","","",116,null],[11,"fmt","","",117,null],[11,"fmt","","",118,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next","","",116,null],[11,"size_hint","","",116,null],[11,"next","","",117,null],[11,"size_hint","","",117,null],[11,"next","","",118,null],[11,"size_hint","","",118,null],[11,"fmt","","",119,null],[11,"clone","","",119,null],[11,"next","","",119,null],[11,"size_hint","","",119,null],[11,"count","","",119,null],[11,"nth","","",119,null],[11,"last","","",119,null],[11,"next_back","","",119,null],[11,"fmt","","",120,null],[11,"clone","","",120,null],[11,"next","","",120,null],[11,"size_hint","","",120,null],[11,"count","","",120,null],[11,"nth","","",120,null],[11,"last","","",120,null],[11,"next_back","","",120,null],[11,"fmt","","",121,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"count","","",121,null],[11,"nth","","",121,null],[11,"last","","",121,null],[11,"next_back","","",121,null],[11,"fmt","core::str::pattern","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"haystack","","",123,null],[11,"next","","",123,null],[11,"next_match","","",123,null],[11,"next_reject","","",123,null],[11,"next_back","","",123,null],[11,"next_match_back","","",123,null],[11,"next_reject_back","","",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"haystack","","",124,null],[11,"next","","",124,null],[11,"next_match","","",124,null],[11,"next_reject","","",124,null],[11,"next_back","","",124,null],[11,"next_match_back","","",124,null],[11,"next_reject_back","","",124,null],[11,"clone","","",125,null],[11,"fmt","","",125,null],[11,"haystack","","",125,null],[11,"next","","",125,null],[11,"next_match","","",125,null],[11,"next_reject","","",125,null],[11,"next_back","","",125,null],[11,"next_match_back","","",125,null],[11,"next_reject_back","","",125,null],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"haystack","","",126,null],[11,"next","","",126,null],[11,"next_match","","",126,null],[11,"next_back","","",126,null],[11,"next_match_back","","",126,null],[11,"eq","core::str","",127,null],[11,"ne","","",127,null],[11,"clone","","",127,null],[11,"fmt","","",127,null],[11,"fmt","","",127,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",128,null],[11,"fmt","","",128,null],[11,"fmt","","",129,null],[11,"clone","","",129,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"next_back","","",129,null],[11,"as_str","","View the underlying data as a subslice of the original data.",129,null],[11,"fmt","","",130,null],[11,"clone","","",130,null],[11,"next","","",130,null],[11,"size_hint","","",130,null],[11,"next_back","","",130,null],[11,"as_str","","View the underlying data as a subslice of the original data.",130,null],[11,"fmt","","",131,null],[11,"clone","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"count","","",131,null],[11,"last","","",131,null],[11,"nth","","",131,null],[11,"next_back","","",131,null],[11,"len","","",131,null],[11,"fmt","","",132,null],[11,"next","","",132,null],[11,"clone","","",132,null],[11,"fmt","","",133,null],[11,"next","","",133,null],[11,"clone","","",133,null],[11,"next_back","","",132,null],[11,"next_back","","",133,null],[11,"fmt","","",134,null],[11,"next","","",134,null],[11,"clone","","",134,null],[11,"fmt","","",135,null],[11,"next","","",135,null],[11,"clone","","",135,null],[11,"next_back","","",134,null],[11,"next_back","","",135,null],[11,"fmt","","",136,null],[11,"next","","",136,null],[11,"clone","","",136,null],[11,"fmt","","",137,null],[11,"next","","",137,null],[11,"clone","","",137,null],[11,"fmt","","",138,null],[11,"next","","",138,null],[11,"clone","","",138,null],[11,"fmt","","",139,null],[11,"next","","",139,null],[11,"clone","","",139,null],[11,"next_back","","",138,null],[11,"next_back","","",139,null],[11,"fmt","","",140,null],[11,"next","","",140,null],[11,"clone","","",140,null],[11,"fmt","","",141,null],[11,"next","","",141,null],[11,"clone","","",141,null],[11,"next_back","","",140,null],[11,"next_back","","",141,null],[11,"fmt","","",142,null],[11,"clone","","",142,null],[11,"next","","",142,null],[11,"size_hint","","",142,null],[11,"next_back","","",142,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"next","","",143,null],[11,"size_hint","","",143,null],[11,"next_back","","",143,null],[11,"fmt","","",144,null],[11,"clone","","",144,null],[11,"fmt","core::hash::sip","",145,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",145,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",145,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",145,null],[11,"finish","","",145,null],[11,"clone","","",145,null],[11,"default","","",145,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",146,null],[11,"build_hasher","","",146,null],[11,"clone","","",146,null],[11,"default","","",146,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",147,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",148,null],[11,"finish","","Finishes output and returns any error encountered.",148,null],[11,"field","","Adds a new field to the generated tuple struct output.",149,null],[11,"finish","","Finishes output and returns any error encountered.",149,null],[11,"entry","","Adds a new entry to the set output.",150,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",150,null],[11,"finish","","Finishes output and returns any error encountered.",150,null],[11,"entry","","Adds a new entry to the list output.",151,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",151,null],[11,"finish","","Finishes output and returns any error encountered.",151,null],[11,"entry","","Adds a new entry to the map output.",152,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",152,null],[11,"finish","","Finishes output and returns any error encountered.",152,null],[11,"partial_cmp","core::fmt","",153,null],[11,"eq","","",153,null],[11,"cmp","","",153,null],[11,"hash","","",153,null],[11,"default","","",153,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",153,null],[11,"clone","","",153,null],[11,"clone","","",154,null],[11,"fmt","","",154,null],[11,"fmt","","",154,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",155,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",155,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",155,null],[11,"write_fmt","","Writes some formatted information into this instance",155,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",155,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",155,null],[11,"align","","Flag indicating what form of alignment was requested",155,null],[11,"width","","Optionally specified integer width that the output should be",155,null],[11,"precision","","Optionally specified precision for numeric types",155,null],[11,"sign_plus","","Determines if the `+` flag was specified.",155,null],[11,"sign_minus","","Determines if the `-` flag was specified.",155,null],[11,"alternate","","Determines if the `#` flag was specified.",155,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",155,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",155,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",155,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",155,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",155,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",155,null],[11,"write_str","","",155,null],[11,"write_char","","",155,null],[11,"write_fmt","","",155,null],[11,"fmt","","",153,null],[11,"fmt","core::marker","",48,null],[11,"fmt","core::cell","",71,null],[11,"fmt","","",73,null],[11,"fmt","","",74,null],[11,"fmt","","",75,null],[11,"fmt","","",76,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",156,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",156,null],[11,"clone","libc","",157,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",158,null],[11,"clone","","",159,null],[11,"clone","","",160,null],[11,"clone","","",161,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",162,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",163,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"CTL_HW","","",null,null],[17,"HW_NCPU","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_SYSCOUNT","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"flock"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
